"use strict";var lastTime=0,currentTime=0;//Use objects' velocities to move
function updateLocations(){var a=(currentTime-lastTime)/1e3;//console.log(timeElapsed);
objects.forEach(function(b){b.x+=60*(b.dx*a),b.y+=60*(b.dy*a),b.angle+=60*(b.dTheta*a),b.x+b.width>mapWidth&&(b.x=mapWidth-b.width,b.dx=0),0>b.x&&(b.x=0,b.dx=0),b.y+b.height>=mapHeight&&(b.y=mapHeight-b.height),0>b.y&&(b.y=0,b.dy=0)})}//Reset all objects' locations to the origin
function resetLocations(){objects.forEach(function(a){a.x=a.x0,a.y=a.y0})}//Set all objects' velocities to 0
function resetVelocities(){objects.forEach(function(a){a.dx=0,a.dy=0})}//Checks to see what keys the user is pressing in order
//to determine what direction to move
function updateVelocities(){objects.forEach(function(a){var b=a.friction,c=0,d=0;a.player&&(keysDown[68]&&(c+=2),keysDown[65]&&(c-=2),keysDown[87]&&a.y+a.height===area.height&&(d-=25),keysDown[69]&&a.dTheta<a.dThetaMax&&a.dTheta++,keysDown[81]&&a.dTheta>-1*a.dThetaMax&&a.dTheta--),a.dx=a.dx*b+c,a.dy=a.dy+d+1.2,a.ball||(a.dTheta*=a.friction),a.dx>a.dxMax&&(a.dx=a.dxMax),a.dx<-1*a.dxMax&&(a.dx=-1*a.dxMax),a.dy>a.dyMax&&(a.dy=a.dyMax),a.dy<-1*a.dyMax&&(a.dy=-1*a.dyMax),a.player&&0==d&&a.y+a.height>=area.height&&(a.dy=0),a.ball&&a.y+a.height>=mapHeight&&(1>Math.abs(a.dy)?a.dy=0:a.dy*=0.98*-1)})}function roll(a){a.ball&&a.y+a.height>=area.height&&(a.dTheta=a.dx),a.dTheta>a.dThetaMax&&(a.dTheta=a.dThetaMax)}function collisions(){var a=[];objects.forEach(function(b){var c=rotateAroundObject(0,0,b),d=rotateAroundObject(b.width,0,b),e=rotateAroundObject(b.width,b.height,b),f=rotateAroundObject(0,b.height,b),g=new SAT.Polygon(null,[new SAT.Vector(c.x,c.y),new SAT.Vector(d.x,d.y),new SAT.Vector(e.x,e.y),new SAT.Vector(f.x,f.y)]);objects.forEach(function(h){if(b!==h){var _i=rotateAroundObject(0,0,h),_j=rotateAroundObject(h.width,0,h),_k=rotateAroundObject(h.width,h.height,h),_l=rotateAroundObject(0,h.height,h),_m=new SAT.Polygon(null,[new SAT.Vector(_i.x,_i.y),new SAT.Vector(_j.x,_j.y),new SAT.Vector(_k.x,_k.y),new SAT.Vector(_l.x,_l.y)]),_n=new SAT.Response,_o=SAT.testPolygonPolygon(g,_m,_n);_o&&-1===a.indexOf([h,b])&&a.push([b,h,_n])}})}),a.forEach(function(b){b[0].ball?(b[0].dx-=b[2].overlapV.x,b[0].dy-=b[2].overlapV.y):(b[1].dx+=b[2].overlapV.x,b[1].dy+=b[2].overlapV.y)})}function doPhysics(){currentTime=new Date().getTime(),updateLocations(),objects.forEach(function(a){roll(a)}),collisions(),updateVelocities(),lastTime=new Date().getTime()}